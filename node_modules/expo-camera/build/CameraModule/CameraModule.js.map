{"version":3,"file":"CameraModule.js","sourceRoot":"","sources":["../../src/CameraModule/CameraModule.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport invariant from 'invariant';\n\nimport { CameraPictureOptions } from '../Camera.types';\nimport { CameraType, CapturedPicture, CaptureOptions, ImageType } from './CameraModule.types';\nimport * as Utils from './CameraUtils';\nimport * as CapabilityUtils from './CapabilityUtils';\nimport {\n  isBackCameraAvailableAsync,\n  isFrontCameraAvailableAsync,\n  canGetUserMedia,\n} from './UserMediaManager';\nimport { FacingModeToCameraType, PictureSizes } from './constants';\n\nexport { ImageType, CameraType, CaptureOptions };\n\ntype OnCameraReadyListener = () => void;\ntype OnMountErrorListener = (event: { nativeEvent: Error }) => void;\n\nexport type WebCameraSettings = Partial<{\n  autoFocus: string;\n  flashMode: string;\n  whiteBalance: string;\n  exposureCompensation: number;\n  colorTemperature: number;\n  iso: number;\n  brightness: number;\n  contrast: number;\n  saturation: number;\n  sharpness: number;\n  focusDistance: number;\n  zoom: number;\n}>;\n\nconst VALID_SETTINGS_KEYS = [\n  'autoFocus',\n  'flashMode',\n  'exposureCompensation',\n  'colorTemperature',\n  'iso',\n  'brightness',\n  'contrast',\n  'saturation',\n  'sharpness',\n  'focusDistance',\n  'whiteBalance',\n  'zoom',\n];\n\nclass CameraModule {\n  public onCameraReady: OnCameraReadyListener = () => {};\n  public onMountError: OnMountErrorListener = () => {};\n  private stream: MediaStream | null = null;\n  private settings: MediaTrackSettings | null = null;\n  private pictureSize?: string;\n  private isStartingCamera = false;\n  private cameraType: CameraType = CameraType.front;\n  private webCameraSettings: WebCameraSettings = {\n    autoFocus: 'continuous',\n    flashMode: 'off',\n    whiteBalance: 'continuous',\n    zoom: 1,\n  };\n\n  public get type(): CameraType {\n    return this.cameraType;\n  }\n\n  constructor(private videoElement: HTMLVideoElement) {\n    if (this.videoElement) {\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        this.syncTrackCapabilities();\n      });\n    }\n  }\n\n  public async updateWebCameraSettingsAsync(nextSettings: {\n    [key: string]: any;\n  }): Promise<boolean> {\n    const changes: WebCameraSettings = {};\n\n    for (const key of Object.keys(nextSettings)) {\n      if (!VALID_SETTINGS_KEYS.includes(key)) continue;\n      const nextValue = nextSettings[key];\n      if (nextValue !== this.webCameraSettings[key]) {\n        changes[key] = nextValue;\n      }\n    }\n\n    // Only update the native camera if changes were found\n    const hasChanges = !!Object.keys(changes).length;\n\n    this.webCameraSettings = { ...this.webCameraSettings, ...changes };\n    if (hasChanges) {\n      await this.syncTrackCapabilities(changes);\n    }\n\n    return hasChanges;\n  }\n\n  public async setTypeAsync(value: CameraType) {\n    if (value === this.cameraType) {\n      return;\n    }\n    this.cameraType = value;\n\n    await this.resumePreview();\n  }\n\n  public setPictureSize(value: string) {\n    if (value === this.pictureSize) {\n      return;\n    }\n    invariant(\n      PictureSizes.includes(value),\n      `expo-camera: CameraModule.setPictureSize(): invalid size supplied ${value}, expected one of: ${PictureSizes.join(\n        ', '\n      )}`\n    );\n\n    // TODO: Bacon: IMP\n    // const [width, height] = value.split('x');\n    // const aspectRatio = parseFloat(width) / parseFloat(height);\n\n    this.pictureSize = value;\n  }\n\n  public isTorchAvailable(): boolean {\n    return isCapabilityAvailable(this.videoElement, 'torch');\n  }\n\n  public isZoomAvailable(): boolean {\n    return isCapabilityAvailable(this.videoElement, 'zoom');\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\n  private async onCapabilitiesReady(\n    track: MediaStreamTrack,\n    settings: WebCameraSettings = {}\n  ): Promise<void> {\n    const capabilities = track.getCapabilities();\n\n    // Create an empty object because if you set a constraint that isn't available an error will be thrown.\n    const constraints: MediaTrackConstraintSet = {};\n\n    // TODO: Bacon: Add `pointsOfInterest` support\n    const clampedValues = [\n      'exposureCompensation',\n      'colorTemperature',\n      'iso',\n      'brightness',\n      'contrast',\n      'saturation',\n      'sharpness',\n      'focusDistance',\n      'zoom',\n    ];\n\n    for (const property of clampedValues) {\n      if (capabilities[property]) {\n        constraints[property] = convertNormalizedSetting(\n          capabilities[property],\n          settings[property]\n        );\n      }\n    }\n\n    const _validatedConstrainedValue = (key, propName, converter) =>\n      validatedConstrainedValue(\n        key,\n        propName,\n        converter(settings[propName]),\n        capabilities,\n        settings,\n        this.cameraType\n      );\n\n    if (capabilities.focusMode && settings.autoFocus !== undefined) {\n      constraints.focusMode = _validatedConstrainedValue(\n        'focusMode',\n        'autoFocus',\n        CapabilityUtils.convertAutoFocusJSONToNative\n      );\n    }\n\n    if (capabilities.torch && settings.flashMode !== undefined) {\n      constraints.torch = _validatedConstrainedValue(\n        'torch',\n        'flashMode',\n        CapabilityUtils.convertFlashModeJSONToNative\n      );\n    }\n\n    if (capabilities.whiteBalanceMode && settings.whiteBalance !== undefined) {\n      constraints.whiteBalanceMode = _validatedConstrainedValue(\n        'whiteBalanceMode',\n        'whiteBalance',\n        CapabilityUtils.convertWhiteBalanceJSONToNative\n      );\n    }\n\n    await track.applyConstraints({ advanced: [constraints] as any });\n  }\n\n  private async applyVideoConstraints(constraints: { [key: string]: any }): Promise<boolean> {\n    if (!this.stream || !this.stream.getVideoTracks) {\n      return false;\n    }\n    return await applyConstraints(this.stream.getVideoTracks(), constraints);\n  }\n\n  private async applyAudioConstraints(constraints: { [key: string]: any }): Promise<boolean> {\n    if (!this.stream || !this.stream.getAudioTracks) {\n      return false;\n    }\n    return await applyConstraints(this.stream.getAudioTracks(), constraints);\n  }\n\n  private async syncTrackCapabilities(settings: WebCameraSettings = {}): Promise<void> {\n    if (this.stream && this.stream.getVideoTracks) {\n      await Promise.all(\n        this.stream.getVideoTracks().map(track => this.onCapabilitiesReady(track, settings))\n      );\n    }\n  }\n\n  private setStream(stream: MediaStream | null): void {\n    this.stream = stream;\n    this.settings = stream ? stream.getTracks()[0].getSettings() : null;\n    setVideoSource(this.videoElement, stream);\n  }\n\n  public getActualCameraType(): CameraType | null {\n    if (this.settings) {\n      // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n      const { facingMode = 'user' } = this.settings;\n      return FacingModeToCameraType[facingMode];\n    }\n    return null;\n  }\n\n  public async ensureCameraIsRunningAsync(): Promise<void> {\n    if (!this.stream) {\n      await this.resumePreview();\n    }\n  }\n\n  public async resumePreview(): Promise<MediaStream | null> {\n    if (this.isStartingCamera) {\n      return null;\n    }\n    this.isStartingCamera = true;\n    try {\n      this.stopAsync();\n      const stream = await Utils.getStreamDevice(this.type);\n      this.setStream(stream);\n      this.isStartingCamera = false;\n      this.onCameraReady();\n      return stream;\n    } catch (error) {\n      this.isStartingCamera = false;\n      this.onMountError({ nativeEvent: error });\n    }\n    return null;\n  }\n\n  public takePicture(config: CameraPictureOptions): CapturedPicture {\n    const base64 = Utils.captureImage(this.videoElement, config);\n\n    const capturedPicture: CapturedPicture = {\n      uri: base64,\n      base64,\n      width: 0,\n      height: 0,\n    };\n\n    if (this.settings) {\n      const { width = 0, height = 0 } = this.settings;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      // TODO: Bacon: verify/enforce exif shape.\n      capturedPicture.exif = this.settings;\n    }\n\n    if (config.onPictureSaved) {\n      config.onPictureSaved({ nativeEvent: { data: capturedPicture, id: config.id } });\n    }\n    return capturedPicture;\n  }\n\n  public stopAsync(): void {\n    stopMediaStream(this.stream);\n    this.setStream(null);\n  }\n\n  // TODO: Bacon: we don't even use ratio in native...\n  public getAvailablePictureSizes = async (ratio: string): Promise<string[]> => {\n    return PictureSizes;\n  };\n\n  static async getAvailableCameraTypesAsync(): Promise<string[]> {\n    if (!canGetUserMedia() || !navigator.mediaDevices.enumerateDevices) return [];\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n\n    const types: (string | null)[] = await Promise.all([\n      (await isFrontCameraAvailableAsync(devices)) && CameraType.front,\n      (await isBackCameraAvailableAsync()) && CameraType.back,\n    ]);\n\n    return types.filter(Boolean) as string[];\n  }\n}\n\nfunction stopMediaStream(stream: MediaStream | null) {\n  if (!stream) return;\n  if (stream.getAudioTracks) stream.getAudioTracks().forEach(track => track.stop());\n  if (stream.getVideoTracks) stream.getVideoTracks().forEach(track => track.stop());\n  if (isMediaStreamTrack(stream)) stream.stop();\n}\n\nfunction setVideoSource(\n  video: HTMLVideoElement,\n  stream: MediaStream | MediaSource | Blob | null\n): void {\n  try {\n    video.srcObject = stream;\n  } catch (_) {\n    if (stream) {\n      video.src = window.URL.createObjectURL(stream);\n    } else if (typeof video.src === 'string') {\n      window.URL.revokeObjectURL(video.src);\n    }\n  }\n}\n\nasync function applyConstraints(\n  tracks: MediaStreamTrack[],\n  constraints: { [key: string]: any }\n): Promise<boolean> {\n  try {\n    await Promise.all(\n      tracks.map(async track => {\n        await track.applyConstraints({ advanced: [constraints] as any });\n      })\n    );\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction isCapabilityAvailable(video: HTMLVideoElement, keyName: string): boolean {\n  const stream = video.srcObject;\n\n  if (stream instanceof MediaStream) {\n    const videoTrack = stream.getVideoTracks()[0];\n\n    if (typeof videoTrack.getCapabilities === 'undefined') {\n      return false;\n    }\n\n    const capabilities: any = videoTrack.getCapabilities();\n\n    return !!capabilities[keyName];\n  }\n\n  return false;\n}\n\nfunction isMediaStreamTrack(input: any): input is MediaStreamTrack {\n  return typeof input.stop === 'function';\n}\n\nfunction convertNormalizedSetting(range: MediaSettingsRange, value?: number): number | undefined {\n  if (!value) return;\n  // convert the normalized incoming setting to the native camera zoom range\n  const converted = convertRange(value, [range.min, range.max]);\n  // clamp value so we don't get an error\n  return Math.min(range.max, Math.max(range.min, converted));\n}\n\nfunction convertRange(value: number, r2: number[], r1: number[] = [0, 1]): number {\n  return ((value - r1[0]) * (r2[1] - r2[0])) / (r1[1] - r1[0]) + r2[0];\n}\n\nfunction validatedConstrainedValue(\n  constraintKey: string,\n  settingsKey: string,\n  convertedSetting: any,\n  capabilities: MediaTrackCapabilities,\n  settings: any,\n  cameraType: string\n): any {\n  const setting = settings[settingsKey];\n  if (\n    Array.isArray(capabilities[constraintKey]) &&\n    convertedSetting &&\n    !capabilities[constraintKey].includes(convertedSetting)\n  ) {\n    console.warn(\n      ` { ${settingsKey}: \"${setting}\" } (converted to \"${convertedSetting}\" in the browser) is not supported for camera type \"${cameraType}\" in your browser. Using the default value instead.`\n    );\n    return undefined;\n  }\n  return convertedSetting;\n}\n\nexport default CameraModule;\n"]}